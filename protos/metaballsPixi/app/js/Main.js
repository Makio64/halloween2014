var Main, main,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

main = null;

Main = (function() {
  Main.prototype.dt = 0;

  Main.prototype.lastTime = 0;

  Main.prototype.pause = false;

  function Main() {
    this.resize = __bind(this.resize, this);
    this.update = __bind(this.update, this);
    main = this;
    this.pause = false;
    this.lastTime = Date.now();
    window.focus();
    Stage2d.init({
      transparent: false,
      antialias: false,
      background: 0xFF0000
    });
    SceneTraveler.to(new GhostScene());
    requestAnimationFrame(this.update);
    return;
  }

  Main.prototype.update = function() {
    var dt, t;
    t = Date.now();
    dt = t - this.lastTime;
    this.lastTime = t;
    if (this.pause) {
      return;
    }
    SceneTraveler.update(dt);
    Stage2d.render();
    requestAnimationFrame(this.update);
  };

  Main.prototype.resize = function() {
    var height, width;
    width = window.innerWidth;
    height = window.innerHeight;
    SceneTraveler.resize();
    Stage2d.resize();
  };

  return Main;

})();

document.addEventListener('DOMContentLoaded', function() {
  main = new Main();
  window.onblur = function(e) {
    main.pause = true;
    cancelAnimationFrame(main.update);
  };
  window.onfocus = function() {
    requestAnimationFrame(main.update);
    main.lastTime = Date.now();
    main.pause = false;
  };
  window.onresize = function() {
    main.resize();
  };
});

//# sourceMappingURL=data:application/json;base64,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LENBQUMsUUFBUCxHQUFrQixTQUFBLEdBQUE7QUFDakIsSUFBQSxJQUFJLENBQUMsTUFBTCxDQUFBLENBQUEsQ0FEaUI7RUFBQSxDQWJsQixDQUQ2QztBQUFBLENBQTlDLENBaERBLENBQUEiLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEdsb2JhbCB2YXJcblxubWFpbiA9IG51bGxcblxuIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ2xhc3MgTWFpblxuXG5jbGFzcyBNYWluXG5cblx0ZHQgXHRcdFx0XHQ6IDBcblx0bGFzdFRpbWUgXHRcdDogMFxuXHRwYXVzZSBcdFx0XHQ6IGZhbHNlXG5cblx0Y29uc3RydWN0b3I6KCktPlxuXHRcdG1haW4gPSBAXG5cdFx0QHBhdXNlID0gZmFsc2Vcblx0XHRAbGFzdFRpbWUgPSBEYXRlLm5vdygpXG5cdFx0d2luZG93LmZvY3VzKClcblx0XHRTdGFnZTJkLmluaXQoe3RyYW5zcGFyZW50OmZhbHNlLGFudGlhbGlhczpmYWxzZSwgYmFja2dyb3VuZDoweEZGMDAwMH0pXG5cblx0XHRTY2VuZVRyYXZlbGVyLnRvKG5ldyBHaG9zdFNjZW5lKCkpXG5cdFx0XG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCBAdXBkYXRlIClcblx0XHRyZXR1cm5cblxuXHR1cGRhdGU6KCk9PlxuXHRcdHQgPSBEYXRlLm5vdygpXG5cdFx0ZHQgPSB0IC0gQGxhc3RUaW1lXG5cdFx0QGxhc3RUaW1lID0gdFxuXG5cdFx0aWYgQHBhdXNlIHRoZW4gcmV0dXJuXG5cblx0XHQjIHVwZGF0ZSBsb2dpYyBoZXJlXG5cdFx0U2NlbmVUcmF2ZWxlci51cGRhdGUoZHQpXG5cdFx0XG5cdFx0IyByZW5kZXIgZnJhbWVcblx0XHRTdGFnZTJkLnJlbmRlcigpXG5cblx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIEB1cGRhdGUgKVxuXHRcdHJldHVyblxuXG5cdHJlc2l6ZTooKT0+XG5cdFx0d2lkdGggXHQ9IHdpbmRvdy5pbm5lcldpZHRoXG5cdFx0aGVpZ2h0IFx0PSB3aW5kb3cuaW5uZXJIZWlnaHRcblx0XHRTY2VuZVRyYXZlbGVyLnJlc2l6ZSgpXG5cdFx0U3RhZ2UyZC5yZXNpemUoKVxuXHRcdHJldHVyblxuXG5cbiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG9uIERvY3VtZW50IFJlYWR5XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKS0+XG5cdG1haW4gPSBuZXcgTWFpbigpXG5cdFxuXHR3aW5kb3cub25ibHVyID0gKGUpLT5cblx0XHRtYWluLnBhdXNlID0gdHJ1ZVxuXHRcdGNhbmNlbEFuaW1hdGlvbkZyYW1lKG1haW4udXBkYXRlKVxuXHRcdHJldHVyblxuXG5cdHdpbmRvdy5vbmZvY3VzID0gKCktPlxuXHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZShtYWluLnVwZGF0ZSlcblx0XHRtYWluLmxhc3RUaW1lID0gRGF0ZS5ub3coKVxuXHRcdG1haW4ucGF1c2UgPSBmYWxzZVxuXHRcdHJldHVyblxuXG5cdHdpbmRvdy5vbnJlc2l6ZSA9ICgpLT5cblx0XHRtYWluLnJlc2l6ZSgpXG5cdFx0cmV0dXJuXG5cblx0cmV0dXJuXG4pIl19